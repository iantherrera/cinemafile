{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\cinemafile - v2\\\\client\\\\src\\\\components\\\\movieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tmdbKey = \"11039f14945ee0f2e0036d42b77c687b\";\n// Test user & db schema:\n/* \r\n_id: 6369d823852305533b133048\r\n\r\nuserName: user1\r\n\r\npassword: password1\r\n\r\nhash: passwordhash\r\n\r\nsalt: hashsalt\r\n\r\nmovieData: [] \r\n*/\n\nconst MovieCard = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieCard\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardOptionsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewedCheckContainer\",\n      children: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoriteButton\",\n      children: \"heart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deleteCardContainer\",\n      children: \"trashcan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rankTitleYearContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieRank\",\n      children: props.movieData.rank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieTitleYearContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieTitle\",\n        children: props.movieData.movieTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieYear\",\n        children: \"2022\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviePosterContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/original/${props.movieData.posterPath}`,\n      alt: \"Movie poster\",\n      className: \"posterImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieSynopsis\",\n    children: props.movieData.overview\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n_c = MovieCard;\nexport default function MovieCards() {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const initMovieData = require(\"../initData/initMovieData.json\");\n  useEffect(() => {\n    async function getUserData() {\n      const response = await fetch(`http://localhost:5000/userData/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const userData = await response.json();\n      console.log(response);\n      console.log(userData.movieData);\n      setUserData(userData);\n      console.log(userData);\n      /*       const movieData = ((userData || {}).movieData || []); */\n    }\n\n    getUserData();\n    return;\n  }, [userData.movieData.length]);\n  if (movieData.length === 0) {\n    console.log(initMovieData);\n    setMovieData(initMovieData);\n    console.log(movieData);\n    movieData.map(setChecked => setChecked.checked = false);\n    movieData.map(setFavorite => setFavorite.favorite = false);\n    console.log(movieData);\n    addData();\n    async function addData() {\n      for (let i = 0; i < initMovieData.length; i++) {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${initMovieData[i].imdbId}?api_key=${tmdbKey}&language=en-US`);\n        if (!response.ok) {\n          const message = `An error occurred: ${response.statusText}`;\n          window.alert(message);\n          return;\n        }\n        const metaData = await response.json();\n        console.log(metaData.title);\n        movieData[i].movieTitle = metaData.title;\n        movieData[i].posterPath = metaData.poster_path;\n        movieData[i].overview = metaData.overview;\n      }\n    }\n    setMovieData(movieData);\n  }\n\n  // Method to toggle viewed status\n\n  // Method to toggle favorite\n\n  // This method will delete a movie entry\n  async function deleteMovie(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newMovieData = movieData.filter(el => el._id !== id);\n    setMovieData(newMovieData);\n  }\n  function movieCards() {\n    return movieData.map(movieData => {\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        movieData: movieData\n        /*           viewed={viewed}\r\n                  favorite={favorite} */,\n        deleteMovie: () => deleteMovie(movieData._id)\n      }, movieData._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"movieCardsContainer\",\n    children: movieCards()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieCards, \"MEi9diF6EeXMji3OmOnykM+Lnog=\");\n_c2 = MovieCards;\nvar _c, _c2;\n$RefreshReg$(_c, \"MovieCard\");\n$RefreshReg$(_c2, \"MovieCards\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","tmdbKey","MovieCard","props","movieData","rank","movieTitle","posterPath","overview","MovieCards","userData","setUserData","initMovieData","require","getUserData","response","fetch","ok","message","statusText","window","alert","json","console","log","length","setMovieData","map","setChecked","checked","setFavorite","favorite","addData","i","imdbId","metaData","title","poster_path","deleteMovie","id","method","newMovieData","filter","el","_id","movieCards"],"sources":["C:/Users/User/OneDrive/Desktop/cinemafile - v2/client/src/components/movieCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst tmdbKey = \"11039f14945ee0f2e0036d42b77c687b\"\r\n// Test user & db schema:\r\n/* \r\n_id: 6369d823852305533b133048\r\n\r\nuserName: user1\r\n\r\npassword: password1\r\n\r\nhash: passwordhash\r\n\r\nsalt: hashsalt\r\n\r\nmovieData: [] \r\n*/\r\n\r\nconst MovieCard = (props) => (\r\n  <div className=\"movieCard\">\r\n    <div className='cardOptionsContainer'>\r\n      <div className='viewedCheckContainer'>check</div>\r\n      <div className='favoriteButton'>heart</div>\r\n      <div className='deleteCardContainer'>trashcan</div>\r\n    </div>\r\n    <div className='rankTitleYearContainer'>\r\n      <div className=\"movieRank\">{props.movieData.rank}</div>\r\n      <div className='movieTitleYearContainer'>\r\n        <div className='movieTitle'>{props.movieData.movieTitle}</div>\r\n        <div className='movieYear'>2022</div>\r\n      </div>\r\n    </div>\r\n    <div className='moviePosterContainer'>\r\n      <img src={`https://image.tmdb.org/t/p/original/${props.movieData.posterPath}`} alt=\"Movie poster\" className='posterImg' />\r\n    </div>\r\n    <div className='movieSynopsis'>\r\n      {props.movieData.overview}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default function MovieCards() {\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const initMovieData = require(\"../initData/initMovieData.json\");\r\n\r\n  useEffect(() => {\r\n    async function getUserData() {\r\n      const response = await fetch(`http://localhost:5000/userData/`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const userData = await response.json();\r\n      console.log(response);\r\n      console.log(userData.movieData);\r\n      setUserData(userData);\r\n      console.log(userData);\r\n      /*       const movieData = ((userData || {}).movieData || []); */\r\n\r\n    }\r\n\r\n    getUserData();\r\n\r\n    return;\r\n  }, [userData.movieData.length])\r\n\r\n\r\n  if (movieData.length === 0) {\r\n    console.log(initMovieData);\r\n    setMovieData(initMovieData);\r\n    console.log(movieData);\r\n    movieData.map((setChecked) =>\r\n      setChecked.checked = false)\r\n    movieData.map((setFavorite) =>\r\n      setFavorite.favorite = false)\r\n    console.log(movieData);\r\n    addData();\r\n\r\n    async function addData() {\r\n      for (let i = 0; i < initMovieData.length; i++) {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${initMovieData[i].imdbId}?api_key=${tmdbKey}&language=en-US`);\r\n\r\n        if (!response.ok) {\r\n          const message = `An error occurred: ${response.statusText}`;\r\n          window.alert(message);\r\n          return;\r\n        }\r\n\r\n        const metaData = await response.json();\r\n        console.log(metaData.title);\r\n        movieData[i].movieTitle = metaData.title;\r\n        movieData[i].posterPath = metaData.poster_path;\r\n        movieData[i].overview = metaData.overview;\r\n      }\r\n    }\r\n    setMovieData(movieData);\r\n  }\r\n\r\n\r\n  // Method to toggle viewed status\r\n\r\n  // Method to toggle favorite\r\n\r\n\r\n  // This method will delete a movie entry\r\n  async function deleteMovie(id) {\r\n    await fetch(`http://localhost:5000/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    const newMovieData = movieData.filter((el) => el._id !== id);\r\n    setMovieData(newMovieData);\r\n  }\r\n\r\n  function movieCards() {\r\n    return movieData.map((movieData) => {\r\n      return (\r\n        <MovieCard\r\n          movieData={movieData}\r\n          /*           viewed={viewed}\r\n                    favorite={favorite} */\r\n          deleteMovie={() => deleteMovie(movieData._id)}\r\n          key={movieData._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id='movieCardsContainer'>\r\n      {movieCards()}\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}